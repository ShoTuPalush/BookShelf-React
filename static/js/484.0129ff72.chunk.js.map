{"version":3,"file":"static/js/484.0129ff72.chunk.js","mappings":"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","sources":["components/EmptyShopingList/EmptyShopingList.tsx","components/ShopingListItem/ShopingListItem.tsx","components/ShopingList/ShopingList.tsx","components/PaginationPage/PaginationPage.tsx","components/Pagination/Pagination.tsx","pages/ShopingListPage.tsx"],"sourcesContent":["import empty from '../../images/empty.png';\n\nexport const EmptyShopingList = () => {\n  return (\n    <>\n      <div className=\"flex mt-20 items-center flex-col md:mt-36\">\n        <p className=\"w-60 text-sm text-center text-gray-700 md:text-lg md:w-350 dark:text-gray-400\">\n          This page is empty, add some books and proceed to order.\n        </p>\n        <img className=\"md:h-60 md:w-80 \" src={empty} alt=\"\" />\n      </div>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../redux/store';\nimport { removeSaveBook } from '../../redux/pagination/slice';\nimport { saveDBList } from '../../redux/auth/operations';\nimport { IBook } from '../../redux/books/slice';\nimport { SvgIconTrash } from '../SvgIcon/SvgIcon';\nimport amazon from '../../images/amazon-icon.png';\nimport applebook from '../../images/applebook-icon.png';\n\ninterface IPropsShopingListItem {\n  book: IBook;\n}\n\nexport const ShopingListItem = ({ book }: IPropsShopingListItem) => {\n  const dispath = useDispatch<AppDispatch>();\n  const removedSaveBook = (book: any) => {\n    dispath(removeSaveBook(book));\n    dispath(saveDBList());\n  };\n  return (\n    <>\n      <button\n        className=\"absolute right-4 top-4 h-7 w-7 rounded-full bg-[#4F2EE8] flex items-center justify-center\n               md:h-9 md:w-9\"\n        type=\"button\"\n        onClick={() => removedSaveBook(book)}\n      >\n        <SvgIconTrash />\n      </button>\n      <div className=\"flex gap-3 md:gap-6\">\n        <img\n          className=\"h-36 w-100 rounded-lg\n              md:h-40 md:w-28\"\n          src={book.book_image}\n          alt={book.title}\n        />\n        <div>\n          <h3 className=\"font-bold w-40 truncate mb-1 text-base md:w-full md:text-base md:mb-2 dark:text-white\">\n            {book.title}\n          </h3>\n          <h4 className=\"font-normal truncate text-[#B4AFAF] text-xs mb-2 md:mb-4 md:text-sm\">{book.list_name}</h4>\n          <p className=\"w-48 h-16 font-normal line-clamp-3 text-sm mb-2 md:w-full dark:text-white\">\n            {book.description}\n          </p>\n          <div className=\"flex justify-between\">\n            <p className=\"font-normal w-40 truncate italic text-[#B4AFAF] text-xs md:w-full md:text-sm\">\n              {book.author}\n            </p>\n            {Object.keys(book).length !== 0 && (\n              <div className=\"flex items-end gap-2 absolute bottom-4 right-4 md:gap-4\">\n                <a href={book.buy_links[0].url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img src={amazon} alt=\"amazon\" className=\"h-3 md:h-5 dark:brightness-0 dark:invert\" />\n                </a>\n                <a href={book.buy_links[1].url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img src={applebook} alt=\"applebook\" className=\"h-4 md:h-7\" />\n                </a>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectPaginBooks } from '../../redux/pagination/selector';\nimport { ShopingListItem } from '../ShopingListItem/ShopingListItem';\n\nexport const ShopingList = () => {\n  const saveBooks = useSelector(selectPaginBooks);\n\n  return (\n    <>\n      <ul>\n        {saveBooks.map((book) => (\n          <li\n            key={nanoid()}\n            className=\"relative mx-4 mb-5 rounded-2xl p-3 border-2 border-indigo-400 md:p-6 md:mx-8 lg:ml-10 lg:mr-6 dark:bg-black\"\n          >\n            <ShopingListItem book={book} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../../redux/store';\nimport { choosePage } from '../../redux/pagination/slice';\nimport clsx from 'clsx';\nimport { selectPage } from '../../redux/pagination/selector';\n\ninterface IPropPage {\n  page: number | string;\n}\n\nexport const PaginationPage = ({ page }: IPropPage) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const activePage = useSelector(selectPage);\n  return (\n    <>\n      <button\n        onClick={() => dispatch(choosePage(page))}\n        className={clsx(\n          'transition-all text-xl text-center pb-1 rounded-full w-9 h-9 border border-black md:h-11 md:w-11 dark:border-white',\n          activePage === page\n            ? 'text-white bg-black  dark:bg-white dark:text-black'\n            : ' text-black  dark:text-white hover:text-white hover:bg-blue-700',\n          typeof page !== 'number' && 'bg-[#EAC645]',\n        )}\n      >\n        {page}\n      </button>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectMaxPage, selectSaveBooks } from '../../redux/pagination/selector';\nimport { PaginationPage } from '../PaginationPage/PaginationPage';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const Pagination = () => {\n  const saveBook = useSelector(selectSaveBooks);\n  const maxPage = useSelector(selectMaxPage);\n\n  return (\n    <>\n      {saveBook.length > 3 && (\n        <div\n          className=\"flex justify-center gap-2 md:gap-2.5 \n        [&>*:nth-child(2)]:mr-3 [&>*:nth-last-child(2)]:ml-3\"\n        >\n          {maxPage.map((page) => (\n            <PaginationPage page={page} key={nanoid()} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { EmptyShopingList } from '../components/EmptyShopingList/EmptyShopingList';\nimport { ShopingList } from '../components/ShopingList/ShopingList';\nimport { SupportUkraine } from '../components/SupportUkraine/SupportUkraine';\nimport { Pagination } from '../components/Pagination/Pagination';\nimport { selectSaveBooks } from '../redux/pagination/selector';\n\nexport default function ShopingListPage() {\n  const saveBooks = useSelector(selectSaveBooks);\n  return (\n    <>\n      <div className=\"lg:flex \">\n        <div className=\"hidden lg:block\">\n          <SupportUkraine />\n        </div>\n        <div className=\"grow\">\n          <h2\n            className=\"font-bold text-3xl mb-10 ml-5\n              md:text-5xl md:ml-8 dark:text-white\"\n          >\n            Shoping <span className=\"text-[#4F2EE8]\">List</span>\n          </h2>\n          {saveBooks.length === 0 ? <EmptyShopingList /> : <ShopingList />}\n          <Pagination />\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["EmptyShopingList","_jsx","_Fragment","children","_jsxs","className","src","empty","alt","ShopingListItem","_ref","book","dispath","useDispatch","type","onClick","removeSaveBook","saveDBList","removedSaveBook","SvgIconTrash","book_image","title","list_name","description","author","Object","keys","length","href","buy_links","url","target","rel","amazon","applebook","ShopingList","saveBooks","useSelector","selectPaginBooks","map","nanoid","PaginationPage","page","dispatch","activePage","selectPage","choosePage","clsx","Pagination","saveBook","selectSaveBooks","maxPage","selectMaxPage","ShopingListPage","SupportUkraine"],"sourceRoot":""}